# Generated by Django 4.2 on 2024-02-14 17:00

import UL.models
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AireLoisir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('categorie', models.CharField(choices=[('Sport', 'Sport'), ('Evenement Culturel', 'Evenement Culturel')], max_length=50)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('type_usage', models.CharField(choices=[('Footbal', 'Footbal'), ('Bascketbaal', 'Bascketbaal'), ('Voleyball', 'Voleyball'), ('Tenis', 'Tenis'), ('Dance', 'Dance'), ('Auditerium', 'Auditerium')])),
                ('aire', models.FloatField(default=0)),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': ' Aire de Loisir',
                'verbose_name_plural': 'Aires de loisirs',
            },
        ),
        migrations.CreateModel(
            name='AireRepos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('aire', models.FloatField(default=0)),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Aire de Repos',
                'verbose_name_plural': 'Aires de Repos',
            },
        ),
        migrations.CreateModel(
            name='AireStationnement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('type', models.CharField(choices=[('Cycliste', 'Cycliste'), ('Automobile', 'Automobile')])),
                ('aire', models.FloatField(default=0)),
                ('camera', models.BooleanField(default=True)),
                ('toiture', models.BooleanField(default=False)),
                ('agent_securite', models.BooleanField(default=True)),
                ('lampadaire', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Aire de tationnement',
            },
        ),
        migrations.CreateModel(
            name='AlerteGenerale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BassinEau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('aire', models.FloatField(default=0, null=True)),
                ('lampadaire', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': "Bassin d'Eau",
                'verbose_name_plural': "Bassin d'Eaux",
            },
        ),
        migrations.CreateModel(
            name='Batis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=60, null=True)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('aire', models.FloatField(default=0)),
                ('adresse', models.CharField(max_length=200, null=True)),
                ('camerasurvaillance', models.BooleanField(default=False)),
                ('extinteur', models.BooleanField(default=False)),
                ('internet', models.BooleanField(default=False)),
                ('renove', models.BooleanField(default=False)),
                ('nature', models.CharField(choices=[('En Chantier', 'En Chantier'), ('Achevé fonctionnel', 'Achevé fonctionnel'), ('Achevé Non fonctionnel', 'Achevé Non fonctionnel')])),
                ('aeration', models.CharField(choices=[('Ventilation', 'Ventilation'), ('Climatisation', 'Climatisation'), ('NEANT/Naturel', 'NEANT/Naturel')], max_length=30)),
                ('date_construi', models.DateField(blank=True, null=True)),
                ('electricite', models.BooleanField(default=True)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')], max_length=19)),
                ('toilette', models.BooleanField(default=False)),
                ('toiture', models.CharField(choices=[('Dallé', 'Dallé'), ('TULLE', 'TULLE'), ('Tôle Aluminium', 'Tôle Aluminium')], max_length=60)),
                ('categorie', models.CharField(choices=[('administratif', 'Administratif'), ('pedagogique', 'Pédagogique'), ('commercial', 'comercial'), ('residentiel', 'residentiel')], max_length=50, null=True)),
                ('nbre_niveau', models.CharField(choices=[('Rez-de-chaussé', 'Rez-de-chaussé'), ('Niveau 1', 'Niveau 1'), ('Niveau 2', 'Niveau 2'), ('Niveau 3', 'Niveau 3'), ('Niveau 4', 'Niveau 4'), ('Niveau 5', 'Niveau 5'), ('Niveau 6', 'Niveau 6'), ('Niveau 7', 'Niveau 7'), ('Niveau 8', 'Niveau 8')], null=True)),
                ('materiaux', models.CharField(choices=[('Materiaux industriels', 'Materiaux industriels'), ('Materiaux ecologique', 'Materiaux ecologique')], max_length=30, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('nb_bureaux', models.PositiveIntegerField(default=0)),
                ('type_service', models.CharField(blank=True, max_length=50, null=True)),
                ('heure_ouverture', models.TimeField(blank=True, null=True)),
                ('heure_fermeture', models.TimeField(blank=True, null=True)),
                ('nb_salle', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('nb_chaise', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('type_banc', models.CharField(blank=True, choices=[('Chaise Bois', 'Chaise Bois'), ('Chaise Plastique', 'Chaise Plastique'), ('Chaise Fauteil', 'Chaise Fauteil')], max_length=30, null=True)),
                ('kit_informatique', models.BooleanField(default=False)),
                ('type_formation', models.CharField(blank=True, choices=[('Professionnelle', 'Professionnelle'), ('Recherche', 'Recherche'), ('Mixte', 'Mixte')], max_length=30, null=True)),
                ('domaine_formation', models.CharField(blank=True, choices=[('Hybride/Polyvalent', 'Hybride/Polyvalent'), ('Santé', 'Santé'), ('Economie', 'Economie'), ('Homme/Societé', 'Homme/Societé'), ('Homme/Societé', 'Homme/Societé'), ('Sport', 'Sport'), ('Informatique', 'Informatique'), ('Agronomie', 'Agronomie'), ('Langue et Art', 'Langue et Art'), ('Communication', 'Communication'), ('Droit/Politique', 'Droit/Politique')], max_length=30, null=True)),
                ('nb_employe', models.PositiveIntegerField(default=0)),
                ('nb_appartement', models.PositiveIntegerField(blank=True, null=True)),
                ('loyer_mensuel', models.FloatField(blank=True, null=True)),
                ('lit', models.BooleanField(default=False)),
                ('cuisine', models.BooleanField(default=False)),
                ('eau', models.BooleanField(default=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Batis',
                'verbose_name_plural': 'Batiments',
            },
        ),
        migrations.CreateModel(
            name='Cloture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=30)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('longueur', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('hauteur', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.MultiLineStringField(srid=32631)),
            ],
        ),
        migrations.CreateModel(
            name='Eclairage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('fonctionnel', models.BooleanField(default=True)),
                ('energie', models.CharField(choices=[('Energie Hydrolique', 'Energie Hydrolique'), ('Energie solaire', 'Energie solaire')], max_length=30)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')], max_length=18)),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('batiment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.batis')),
            ],
            options={
                'verbose_name': 'Eclairage',
                'verbose_name_plural': 'Eclairages',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='LimiteGeographique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('aire', models.FloatField(default=0)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Limite',
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('theme', models.CharField(max_length=60, null=True)),
                ('aire', models.FloatField(default=0)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
            ],
            options={
                'verbose_name': 'Zone',
                'verbose_name_plural': 'Zones',
            },
        ),
        migrations.CreateModel(
            name='Voirie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('date_constru', models.DateTimeField(blank=True, null=True)),
                ('largeur', models.FloatField(default=0)),
                ('adresse', models.CharField(max_length=200)),
                ('aire', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('longueur', models.FloatField(default=0)),
                ('Panneau', models.BooleanField(default=True)),
                ('lampe', models.BooleanField(default=True)),
                ('caniveau', models.BooleanField(default=True)),
                ('nature', models.CharField(choices=[('Bitumé', 'Bitumé'), ('Pavé et ciment', 'Pavé et ciment'), ('Non Révetue', 'Non Révetue')], max_length=30)),
                ('categorie', models.CharField(choices=[('circulation Petonne', 'circulation pietonne'), ('circulation automobile', 'circulation automobile')], max_length=30)),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='voirie_limite', to='UL.limitegeographique')),
            ],
            options={
                'verbose_name': 'Route',
                'verbose_name_plural': 'Routes',
            },
        ),
        migrations.CreateModel(
            name='TrameVerte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('categorie', models.CharField(choices=[('Aire Forestiére Naturelles Existante', 'Aire Forestiére Naturelles Existante'), ('Aire Forestiére Naturelles Reboisé', 'Aire Forestiére Naturelles Reboisé'), ('Aire Forestiére de Redéployement Reboisé', 'Aire Forestiére de Redéployement Reboisé'), ('Aire Forestiére de Redéployement Non reboisée', 'Aire Forestiére de Redéployement Non Reboisée'), ('Espace vert aménagé', 'Espace vert Aménagé'), ('Espace vert Non aménagé', 'Espace vert Non aménagé'), ('Ceinture Verte Non Aménagée', 'Ceinture Verte Non Aménagée'), ('Parc Forestier Reboisé', 'Parc Forestier Reboisé'), ('Parc Forestier Non Reboisé', 'Parc Forestier Non Reboisé'), ("Stricture d'Acueil Non Amenagée", "Stricture d'Acueil Non Amenagée"), ('Jardin Botanique', 'Jardin Botanique (Végétation Experimentale)'), ('Autre Aire de Redéployement', 'Autre Aire de Redéployement')], max_length=60)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('aire', models.FloatField(default=0)),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('batiment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bat_jardin', to='UL.batis')),
                ('lampe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.eclairage')),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
            ],
            options={
                'verbose_name': 'Trame Verte',
            },
        ),
        migrations.CreateModel(
            name='ToiletteIsole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('aire', models.FloatField(default=0)),
                ('geometrie', django.contrib.gis.db.models.fields.PolygonField(srid=32631)),
                ('fonctionnel', models.BooleanField(default=True)),
                ('secteur', models.CharField(blank=True, choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')], null=True)),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('limite', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
            ],
            options={
                'verbose_name': 'Toilette Isole',
                'verbose_name_plural': 'Toilette Isoles',
            },
        ),
        migrations.CreateModel(
            name='Telecomminication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=40)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('type', models.CharField(choices=[('Antenne Securité', 'Antenne Securité'), ('Antenne réseau', 'Antenne réseau'), ('Antenne Radio', 'Antenne Radio'), ('Antenne Wifi', 'Antenne Wifi')])),
                ('fonctionnel', models.BooleanField(default=True)),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('proprietaire', models.CharField(choices=[('Université de Lomé', 'Université de Lomé'), ('Moov', 'Moov'), ('Banque', 'Banque'), ('République Togolaise', 'République Togolaise'), ('TogoCom', 'TogoCom')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
            ],
            options={
                'verbose_name': 'Telecommunication',
                'verbose_name_plural': 'Telecommunications',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='StationMeteo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('type', models.CharField(choices=[('Station Synoptique', 'Station Synoptique'), ('Antenne Manuelle', 'Antenne Manuelle')])),
                ('fonctionnel', models.BooleanField(default=True)),
                ('commentaire', models.TextField(max_length=300)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
            ],
            options={
                'verbose_name': 'Station météo',
                'verbose_name_plural': 'Stations météos',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='Reposoir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=40)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('type', models.CharField(choices=[('Banc', 'Banc'), ('Table banc', 'Table banc'), ('Banc couvert', 'Banc couvert'), ('Table banc couvert', 'Table banc couvert')])),
                ('materiel', models.CharField(choices=[('Bois', 'Bois'), ('Béton', 'Béton')])),
                ('nombe_place', models.IntegerField()),
                ('fonctionnel', models.BooleanField(default=True)),
                ('toiture', models.BooleanField(default=False)),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('aire_repos', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.airerepos')),
                ('espace_vert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.trameverte')),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
            ],
            options={
                'verbose_name': 'Reposoir',
                'verbose_name_plural': 'Reposoirs',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='Poubelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('fonctionnel', models.BooleanField(default=True)),
                ('secteur', models.CharField(blank=True, choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
            ],
            options={
                'verbose_name': 'Poubele',
                'verbose_name_plural': 'Poubeles',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='PointEau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=40)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('source', models.CharField(choices=[('Forage', 'Forage'), ('TDE', 'Tde')])),
                ('fonctionnel', models.BooleanField(default=True)),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('batiment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.batis')),
                ('espace_vert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.trameverte')),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
            ],
            options={
                'verbose_name': "Point d'eau",
                'verbose_name_plural': "Points d'eaux",
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='Passerelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.LineStringField(srid=32631)),
                ('fonctionnel', models.BooleanField(default=True)),
                ('secteur', models.CharField(blank=True, choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')], null=True)),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
            ],
            options={
                'verbose_name': 'Passerelle',
                'verbose_name_plural': 'Passerelles',
            },
        ),
        migrations.CreateModel(
            name='Panneau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=40)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('categorie', models.CharField(choices=[('Routier', 'Routier'), ('Informationel', 'Informationel')])),
                ('type', models.CharField(choices=[('Danger', 'Danger'), ('Obligation', 'Obligation'), ('Interdiction', 'Interdiction'), ('indication', 'indication')])),
                ('forme', models.CharField(choices=[('Cercle', 'Cercle'), ('Carré', 'Carré'), ('Rectangle', 'Rectangle'), ('Triangle', 'Triangle'), ('Hec/Hex/gone', 'Hec/Hex/gone')])),
                ('fonctionnel', models.BooleanField(default=True)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('patking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.airestationnement')),
                ('route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.voirie')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
            ],
            options={
                'verbose_name': 'Panneau',
                'verbose_name_plural': 'Panneaux',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='Kiosque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('aire', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('usage', models.CharField(choices=[('Commercial', 'Commercial'), ('Sanitaire', 'Sanitaire'), ('Sociale', 'Sociale'), ('Pédagogique', 'Pédagogique'), ('Culturelle', 'Culturelle')])),
                ('fonctionnel', models.BooleanField(default=True)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
            ],
            options={
                'verbose_name': 'Kiosque',
                'verbose_name_plural': 'Kiosques',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='Fosseseptique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('fonctionnel', models.BooleanField(default=True)),
                ('secteur', models.CharField(blank=True, choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('commentaire', models.TextField(blank=True, max_length=300, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
            ],
            options={
                'verbose_name': 'Fosse septique',
                'verbose_name_plural': 'Fosses septiques',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.AddField(
            model_name='eclairage',
            name='espace_vert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.trameverte'),
        ),
        migrations.AddField(
            model_name='eclairage',
            name='limite',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique'),
        ),
        migrations.AddField(
            model_name='eclairage',
            name='loisir',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lamp_loisir', to='UL.aireloisir'),
        ),
        migrations.AddField(
            model_name='eclairage',
            name='plan_eau',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lamp_plan_eau', to='UL.bassineau'),
        ),
        migrations.AddField(
            model_name='eclairage',
            name='route',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lamp_route', to='UL.voirie'),
        ),
        migrations.AddField(
            model_name='eclairage',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone'),
        ),
        migrations.CreateModel(
            name='Caniveau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('aire', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('largeur', models.FloatField(default=0)),
                ('longueur', models.FloatField(default=0)),
                ('profondueur', models.FloatField(default=0)),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('rue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='caniveau_rue', to='UL.voirie')),
            ],
        ),
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('date_instal', models.DateField(blank=True, null=True)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')], max_length=11)),
                ('type', models.CharField(choices=[('RGB', 'RGB'), ('InfraRouge', 'InfraRouge')], max_length=30)),
                ('fonctionnel', models.BooleanField(default=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('batiment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='camera_bat', to='UL.batis')),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('parking', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='camera_park', to='UL.airestationnement')),
                ('zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
            ],
            options={
                'verbose_name': 'Camera',
                'verbose_name_plural': 'Cameras',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.AddField(
            model_name='batis',
            name='limite',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique'),
        ),
        migrations.AddField(
            model_name='batis',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone'),
        ),
        migrations.AddField(
            model_name='bassineau',
            name='limite',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique'),
        ),
        migrations.AddField(
            model_name='bassineau',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone'),
        ),
        migrations.CreateModel(
            name='ArbreReboise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('espece', models.CharField(blank=True, max_length=80, null=True)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('type', models.CharField(default='Arbre Reboisé')),
                ('hauteur', models.FloatField(blank=True, null=True)),
                ('diametre', models.FloatField(blank=True, null=True)),
                ('commentaire', models.TextField(max_length=300)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('nature', models.CharField(choices=[('Arbre Fruitier', 'Arbre Fruitier'), ('Arbre Bois', 'Arbre Bois')])),
                ('image', models.ImageField(upload_to='')),
                ('annee_reboise', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
                ('zone_plantation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.trameverte')),
            ],
            options={
                'verbose_name': 'Arbre Reboisé',
                'verbose_name_plural': 'Arbres Reboisés',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='ArbreIsole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('espece', models.CharField(blank=True, max_length=80, null=True)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('type', models.CharField(choices=[('Arbre naturel', 'Arbre naturel'), ('Arbre reboisé', 'Arbre reboisé')])),
                ('hauteur', models.FloatField(blank=True, null=True)),
                ('diametre', models.FloatField(blank=True, null=True)),
                ('commentaire', models.TextField(max_length=300)),
                ('secteur', models.CharField(choices=[('Campus Nord', 'Campus Nord'), ('Campus Sud', 'Campus Sud')])),
                ('nature', models.CharField(choices=[('Arbre Fruitier', 'Arbre Fruitier'), ('Arbre Bois', 'Arbre Bois')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('annee_creation', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone')),
            ],
            options={
                'verbose_name': 'Arbre isolé',
                'verbose_name_plural': 'Arbres isolés',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='AlerteWifi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('wifi', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.telecomminication')),
            ],
        ),
        migrations.CreateModel(
            name='AlerteReposoir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('repos', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.reposoir')),
            ],
        ),
        migrations.CreateModel(
            name='AlertePoubelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('poubelle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.poubelle')),
            ],
        ),
        migrations.CreateModel(
            name='AlertePointEau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('point_eau', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.pointeau')),
            ],
        ),
        migrations.CreateModel(
            name='AlerteLampadaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('lampadaire', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.eclairage')),
            ],
        ),
        migrations.CreateModel(
            name='AlerteJardin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('verdure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.trameverte')),
            ],
        ),
        migrations.CreateModel(
            name='AlerteBatiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('lesPennes', multiselectfield.db.fields.MultiSelectField(choices=[('choix1', 'Climatisation'), ('choix2', 'Vitilateur'), ('choix3', 'Ampoule'), ('choix3', 'Sonorisation'), ('choix3', 'Table/Banc')], max_length=300)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('batiment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.batis')),
            ],
        ),
        migrations.AddField(
            model_name='airestationnement',
            name='limite',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique'),
        ),
        migrations.AddField(
            model_name='airestationnement',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone'),
        ),
        migrations.AddField(
            model_name='airerepos',
            name='limite',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique'),
        ),
        migrations.AddField(
            model_name='airerepos',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone'),
        ),
        migrations.AddField(
            model_name='aireloisir',
            name='limite',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='UL.limitegeographique'),
        ),
        migrations.AddField(
            model_name='aireloisir',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone'),
        ),
    ]
