# Generated by Django 4.2.3 on 2023-12-18 15:06

import UL.models
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlerteGenerale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.CharField(max_length=70)),
            ],
        ),
        migrations.CreateModel(
            name='Batiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=60, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('aire', models.FloatField(default=0)),
                ('adresse', models.CharField(max_length=200, null=True)),
                ('camerasurvaillance', models.BooleanField(default=False)),
                ('extinteur', models.BooleanField(default=False)),
                ('internet', models.BooleanField(default=False)),
                ('renove', models.BooleanField(default=False)),
                ('nature', models.CharField(choices=[('CHANT', 'En Chantier'), ('ACHEV1', 'Achevé fonctionnel'), ('ACHEV2', 'Achevé Non fonctionnel')])),
                ('aeration', models.CharField(choices=[('VENT', 'Ventilation'), ('CLIM', 'Climatisation'), ('NUL', 'NEANT/Naturel')], max_length=10)),
                ('date_construi', models.DateField(blank=True, null=True)),
                ('electricite', models.BooleanField(default=True)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')], max_length=19)),
                ('toilette', models.BooleanField(default=False)),
                ('toiture', models.CharField(choices=[('AL', 'Dallé'), ('TUL', 'TULLE'), ('TOLA', 'Tôle Aluminium'), ('TOLZ', 'Tôle zin 0.5')], max_length=100)),
                ('categorie', models.CharField(choices=[('administratif', 'Administratif'), ('pedagogique', 'Pédagogique'), ('commercial', 'comercial'), ('residentiel', 'residentiel')], max_length=50, null=True)),
                ('nbre_niveau', models.CharField(choices=[('RE', 'Rez-de-chaussé'), ('N1', 'Niveau 1'), ('N2', 'Niveau 2'), ('N3', 'Niveau 3'), ('N4', 'Niveau 4'), ('N5', 'Niveau 5'), ('N6', 'Niveau 6'), ('N7', 'Niveau 7'), ('N8', 'Niveau 8')], null=True)),
                ('materiaux', models.CharField(choices=[('INDUS', 'Materiaux industriels'), ('ECOLO', 'Materiaux ecologique')], max_length=10, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('nb_bureaux', models.PositiveIntegerField(default=0)),
                ('type_service', models.CharField(blank=True, max_length=70, null=True)),
                ('heure_ouverture', models.TimeField(blank=True, null=True)),
                ('heure_fermeture', models.TimeField(blank=True, null=True)),
                ('type_banc', models.CharField(blank=True, choices=[('BOI', 'Chaise Bois'), ('PLAS', 'Chaise Plastique'), ('FAUT', 'Chaise Fauteil')], max_length=30, null=True)),
                ('kit_informatique', models.BooleanField(default=False)),
                ('type_formation', models.CharField(blank=True, choices=[('PRO', 'Professionnelle'), ('RECH', 'Recherche')], max_length=30, null=True)),
                ('domaine_formation', models.CharField(blank=True, choices=[('D1_POLY', 'Hybride/Polyvalent'), ('D2_SAN', 'Santé'), ('D3_ECO', 'Economie'), ('D4_ENV', 'Environnement'), ('D5_HS', 'Homme/Societé'), ('D6_SPOR', 'Sport'), ('D7_INFO', 'Informatique'), ('D8_AGRO', 'Agronomie'), ('D9_LANG', 'Langue'), ('D10_COMM', 'Communication'), ('D11_DROI', 'Droit/Politique')], max_length=30, null=True)),
                ('nb_salle', models.PositiveIntegerField(default=0)),
                ('nb_chaise', models.PositiveIntegerField(default=0)),
                ('nb_employe', models.PositiveIntegerField(default=0)),
                ('type_commerce', models.CharField(blank=True, max_length=60, null=True)),
                ('nb_appartement', models.PositiveIntegerField(blank=True, null=True)),
                ('loyer_mensuale', models.FloatField(blank=True, null=True)),
                ('lit', models.BooleanField(default=False)),
                ('cuisine', models.BooleanField(default=False)),
                ('eau', models.BooleanField(default=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Batiment',
                'verbose_name_plural': 'Batiments',
            },
        ),
        migrations.CreateModel(
            name='EspaceVert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('V.NAT', 'Vegetation naturel'), ('V.REB', 'Vegetation reboisé'), ('V.AMG', 'Espace vert aménagé'), ('BROU/C', 'Brousaille/Champs'), ('V.EXPERT', 'Vegetation expérimentale')], max_length=10)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('aire', models.FloatField(default=0)),
                ('precision', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(auto_now_add=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('batiment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bat_jardin', to='UL.batiment')),
            ],
            options={
                'verbose_name': 'Espace vert',
                'verbose_name_plural': 'Espaces verts',
            },
        ),
        migrations.CreateModel(
            name='Limite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('aire', models.FloatField(default=0)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PolygonField(srid=32631)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Limite',
            },
        ),
        migrations.CreateModel(
            name='Zone_UL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('aire', models.IntegerField(default=0)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='UL.limite')),
            ],
            options={
                'verbose_name': 'Zone',
                'verbose_name_plural': 'Zones',
            },
        ),
        migrations.CreateModel(
            name='Voirie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('lat', models.FloatField(blank=True)),
                ('lon', models.FloatField(blank=True)),
                ('date_construc', models.DateTimeField(auto_now_add=True, null=True)),
                ('largeur', models.FloatField(default=0)),
                ('adresse', models.CharField(max_length=200)),
                ('longueur', models.FloatField(default=0)),
                ('Paneaux', models.BooleanField(default=True)),
                ('lampadaire', models.BooleanField(default=True)),
                ('revetement', models.CharField(choices=[('B', 'Bitumé'), ('P', 'Pavé'), ('T', 'Non Révetue')], max_length=10)),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='voirie_limite', to='UL.limite')),
            ],
            options={
                'verbose_name': 'Route',
                'verbose_name_plural': 'Routes',
            },
        ),
        migrations.CreateModel(
            name='Telecomminication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=40)),
                ('lat', models.FloatField(blank=True)),
                ('lon', models.FloatField(blank=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(choices=[('AS', 'Antenne Securité'), ('AR', 'Antenne réseau'), ('RAD', 'Antenne Radio'), ('wf', 'Wifi')])),
                ('fonctionnel', models.BooleanField(default=True)),
                ('precision', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')])),
                ('propriete', models.CharField(choices=[('UL', 'Université de Lomé'), ('MOOV', 'Moov'), ('BANK', 'Banque'), ('GOUV', 'République Togolaise'), ('TGCOM', 'TogoCom')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(auto_now_add=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
            ],
            options={
                'verbose_name': 'Telecommunication',
                'verbose_name_plural': 'Telecommunications',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='Reposoir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=40)),
                ('lat', models.FloatField(blank=True)),
                ('lon', models.FloatField(blank=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(choices=[('BAN', 'Banc'), ('TABBAN', 'Table banc'), ('BAN_C', 'Banc couvert'), ('TABBAN_C', 'Table banc couvert')])),
                ('materiel', models.CharField(choices=[('BOI', 'Bois'), ('BETON', 'Béton')])),
                ('place', models.IntegerField()),
                ('fonctionnel', models.BooleanField(default=True)),
                ('toiture', models.BooleanField(default=False)),
                ('precision', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(auto_now_add=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('espace_vert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.espacevert')),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
            ],
            options={
                'verbose_name': 'Reposoir',
                'verbose_name_plural': 'Reposoirs',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='PointEau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=40)),
                ('lat', models.FloatField(blank=True)),
                ('lon', models.FloatField(blank=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(choices=[('FOR', 'Forage'), ('TDE', 'Tde')])),
                ('fonctionnel', models.BooleanField(default=True)),
                ('precision', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(auto_now_add=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('batiment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.batiment')),
                ('espace_vert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.espacevert')),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
            ],
            options={
                'verbose_name': "Point d'eau",
                'verbose_name_plural': "Points d'eaux",
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='PlanEau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('aire', models.FloatField(default=0, null=True)),
                ('lampadaire', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('precision', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
            ],
            options={
                'verbose_name': "Plan d'eau",
                'verbose_name_plural': "Plans d'eaux",
            },
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(choices=[('CYCL', 'Cycliste'), ('AUTO', 'Automobile')])),
                ('aire', models.FloatField(default=0)),
                ('camera', models.BooleanField(default=True)),
                ('toiture', models.BooleanField(default=False)),
                ('agent_securite', models.BooleanField(default=True)),
                ('lampadaire', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('precision', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
            ],
            options={
                'verbose_name': 'Parking',
                'verbose_name_plural': 'Parkings',
            },
        ),
        migrations.CreateModel(
            name='Paneau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=40)),
                ('lat', models.FloatField(blank=True)),
                ('lon', models.FloatField(blank=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(choices=[('ROUT', 'Routier'), ('INFO', 'Informationel')])),
                ('forme', models.CharField(choices=[('CRC', 'Cercle'), ('CAR', 'Carré'), ('REC', 'Rectangle'), ('TRI', 'Triangle'), ('HEX', 'Hec/Hex/gone')])),
                ('fonctionnel', models.BooleanField(default=True)),
                ('role', models.CharField(choices=[('PUB', 'Publicitaire'), ('DIRC', 'Directionel'), ('SENS', 'Sensibilisation')])),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')])),
                ('precision', models.TextField(blank=True, max_length=300, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(auto_now_add=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('patking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.parking')),
                ('route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.voirie')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
            ],
            options={
                'verbose_name': 'Paneau',
                'verbose_name_plural': 'Paneaux',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='Meteo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('lat', models.FloatField(blank=True)),
                ('lon', models.FloatField(blank=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(choices=[('SYNOP', 'Station Synoptique'), ('MANUAL', 'Antenne .....')])),
                ('fonctionnel', models.BooleanField(default=True)),
                ('precision', models.TextField(max_length=300)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('date_creation', models.DateField(auto_now_add=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
            ],
            options={
                'verbose_name': 'Station météo',
                'verbose_name_plural': 'Stations météos',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='Loisir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('categorie', models.CharField(choices=[('SPOR', 'Sport'), ('SPECTACL', 'Evenement Culturel')], max_length=10)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('type_usage', models.CharField(choices=[('B1', 'Footbal'), ('B2', 'Bascketbaal'), ('B3', 'Voleyball'), ('B4', 'Tenis'), ('D', 'Dance'), ('AUDI', 'Auditerium')])),
                ('aire', models.FloatField(default=0)),
                ('precision', models.TextField(blank=True, max_length=300, null=True)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(auto_now_add=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.MultiPolygonField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
            ],
            options={
                'verbose_name': 'Espace loisir',
                'verbose_name_plural': 'Espaces loisirs',
            },
        ),
        migrations.CreateModel(
            name='Lampadaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('lat', models.FloatField(blank=True)),
                ('lon', models.FloatField(blank=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(choices=[('CEET', 'CEET'), ('SOLAR', 'Solaire')])),
                ('fonctionnel', models.BooleanField(default=True)),
                ('energie', models.CharField(choices=[('CEET', 'Energie Hydrolique'), ('SOLAR', 'Energie solaire')], max_length=7)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')], max_length=11)),
                ('precision', models.TextField(blank=True, max_length=300, null=True)),
                ('date_creation', models.DateField(auto_now_add=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('batiment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.batiment')),
                ('espace_vert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.espacevert')),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('loisir', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lamp_loisir', to='UL.loisir')),
                ('plan_eau', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lamp_plan_eau', to='UL.planeau')),
                ('route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lamp_eau', to='UL.voirie')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
            ],
            options={
                'verbose_name': 'Lampadaire',
                'verbose_name_plural': 'Lampadaires',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='Kiosque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('usage', models.CharField(choices=[('COM', 'Commercial'), ('SANT', 'Sanitaire'), ('SOS', 'Sociale'), ('PED', 'Pédagogique'), ('CUL', 'Culturelle')])),
                ('fonctionnel', models.BooleanField(default=True)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')])),
                ('precision', models.TextField(blank=True, max_length=300, null=True)),
                ('date_creation', models.DateField(auto_now_add=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
            ],
            options={
                'verbose_name': 'Kiosque',
                'verbose_name_plural': 'Kiosques',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.AddField(
            model_name='espacevert',
            name='lampe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.lampadaire'),
        ),
        migrations.AddField(
            model_name='espacevert',
            name='limite',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite'),
        ),
        migrations.AddField(
            model_name='espacevert',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul'),
        ),
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('date_instal', models.DateField(auto_now_add=True, null=True)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')], max_length=11)),
                ('type', models.CharField(choices=[('RGB', 'RGB'), ('IR', 'InfraRouge')], max_length=5)),
                ('fonctionnel', models.BooleanField(default=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('batiment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='camera_bat', to='UL.batiment')),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('parking', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='camera_park', to='UL.parking')),
                ('zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
            ],
            options={
                'verbose_name': 'Camera',
                'verbose_name_plural': 'Cameras',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.AddField(
            model_name='batiment',
            name='limite',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite'),
        ),
        migrations.AddField(
            model_name='batiment',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul'),
        ),
        migrations.CreateModel(
            name='Assainissement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(choices=[('PBL', 'Poubele'), ('FOS', 'Fosse septique')])),
                ('fonctionnel', models.BooleanField(default=True)),
                ('secteur', models.CharField(blank=True, choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')], null=True)),
                ('precision', models.TextField(blank=True, max_length=300, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_creation', models.DateField(auto_now_add=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=32631)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
            ],
            options={
                'verbose_name': 'Assainissement',
                'verbose_name_plural': 'Assainissements',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='ArbreReboise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('espece', models.CharField(blank=True, max_length=80, null=True)),
                ('lat', models.FloatField(blank=True)),
                ('lon', models.FloatField(blank=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(default='Arbre Reboisé')),
                ('hauteur', models.FloatField(blank=True, null=True)),
                ('diametre', models.FloatField(blank=True, null=True)),
                ('precision', models.TextField(max_length=300)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')])),
                ('nature', models.CharField(choices=[('NAT', 'Arbre Fruitier'), ('REBOI', 'Arbre Bois')])),
                ('image', models.ImageField(upload_to='')),
                ('annee_reboise', models.DateField(blank=True, null=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
                ('zone_plantation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.espacevert')),
            ],
            options={
                'verbose_name': 'Arbre Reboisé',
                'verbose_name_plural': 'Arbres Reboisés',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='ArbreIsole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('espece', models.CharField(blank=True, max_length=80, null=True)),
                ('lat', models.FloatField(blank=True)),
                ('lon', models.FloatField(blank=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(choices=[('NAT', 'Arbre naturel'), ('REBOI', 'Arbre reboisé')])),
                ('hauteur', models.FloatField(blank=True, null=True)),
                ('diametre', models.FloatField(blank=True, null=True)),
                ('precision', models.TextField(max_length=300)),
                ('secteur', models.CharField(choices=[('NORD', 'Campus Nord'), ('SUD', 'Campus Sud')])),
                ('nature', models.CharField(choices=[('NAT', 'Arbre Fruitier'), ('REBOI', 'Arbre Bois')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('annee_creation', models.DateField(auto_now_add=True)),
                ('geometrie', django.contrib.gis.db.models.fields.PointField(srid=32631)),
                ('date_collecte', models.DateTimeField(auto_now_add=True)),
                ('agent_collecteur', models.CharField(blank=True, max_length=50, null=True)),
                ('info_modifier_le', models.DateTimeField(auto_now=True)),
                ('limite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.limite')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.zone_ul')),
            ],
            options={
                'verbose_name': 'Arbre isolé',
                'verbose_name_plural': 'Arbres isolés',
            },
            bases=(UL.models.CodeLatLonGeom, models.Model),
        ),
        migrations.CreateModel(
            name='AlerteWifi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.CharField(max_length=70)),
                ('wifi', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.telecomminication')),
            ],
        ),
        migrations.CreateModel(
            name='AlerteReposoir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.CharField(max_length=70)),
                ('repos', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.reposoir')),
            ],
        ),
        migrations.CreateModel(
            name='AlertePoubelleFosse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.CharField(max_length=70)),
                ('poubellefosse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.assainissement')),
            ],
        ),
        migrations.CreateModel(
            name='AlertePointEau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('point_eau', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.pointeau')),
            ],
        ),
        migrations.CreateModel(
            name='AlerteLampadaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.CharField(max_length=70)),
                ('lampadaire', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.lampadaire')),
            ],
        ),
        migrations.CreateModel(
            name='AlerteJardin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.CharField(max_length=70)),
                ('verdure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.espacevert')),
            ],
        ),
        migrations.CreateModel(
            name='AlerteBatiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disfonction', models.BooleanField(default=False)),
                ('lesPennes', multiselectfield.db.fields.MultiSelectField(choices=[('choix1', 'Climatisation'), ('choix2', 'Vitilateur'), ('choix3', 'Ampoule'), ('choix3', 'Sonorisation'), ('choix3', 'Table/Banc')], max_length=300)),
                ('SOSMessage', models.TextField(max_length=300)),
                ('date_alerte', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.CharField(max_length=70)),
                ('batiment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UL.batiment')),
            ],
        ),
    ]
